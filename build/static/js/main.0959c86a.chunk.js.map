{"version":3,"sources":["Info/Info.js","Bubbles/Effects.js","Bubbles/Bubbles.js","Home/Home.js","serviceWorker.js","index.js"],"names":["Info","className","href","target","rel","_load","SMAAImageLoader","prototype","load","Post","useThree","gl","scene","camera","size","smaa","useLoader","composer","useMemo","EffectComposer","addPass","RenderPass","smaaEffect","SMAAEffect","colorEdgesMaterial","setEdgeDetectionThreshold","normalPass","NormalPass","ssaoEffect","SSAOEffect","renderTarget","texture","blendFunction","BlendFunction","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","radius","scale","bias","effectPass","EffectPass","renderToScreen","useEffect","setSize","width","height","useFrame","_","delta","render","set","bind","this","Swarm","count","mouse","type","mesh","useRef","dummy","THREE","particles","temp","i","t","Math","random","factor","speed","xFactor","yFactor","zFactor","push","mx","my","state","forEach","particle","a","cos","sin","b","s","max","current","position","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","attach","color","aoMapIntensity","Bubbles","sphereMouse","boxMouse","alpha","antialias","logarithmicDepthBuffer","fov","onCreated","setClearColor","toneMapping","outputEncoding","intensity","fallback","Home","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qSAiCeA,MA9Bf,WACI,OACI,yBAAKC,UAAU,QACX,sCACA,iDACA,qFAC2D,6BAD3D,qKAKA,mJAEsB,6BAFtB,gHAMA,2BACI,uBAAGC,KAAK,4CAA4CC,OAAO,SACxDC,IAAI,uBADP,YADJ,iBAGI,uBAAGF,KAAK,kCAAkCC,OAAO,SAC9CC,IAAI,uBADP,UAHJ,iBAKI,uBAAGF,KAAK,kCAAkCC,OAAO,SAC9CC,IAAI,uBADP,UAEA,6BACA,uBAAGF,KAAK,6BAA6BC,OAAO,SAASC,IAAI,uBAAzD,0B,uCCbVC,EAAQC,IAAgBC,UAAUC,KAKzB,SAASC,IAAQ,IAAD,EACOC,cAA3BC,EADoB,EACpBA,GAAIC,EADgB,EAChBA,MAAOC,EADS,EACTA,OAAQC,EADC,EACDA,KACpBC,EAAOC,YAAUV,KACjBW,EAAWC,mBAAQ,WACrB,IAAMD,EAAW,IAAIE,IAAeR,GACpCM,EAASG,QAAQ,IAAIC,IAAWT,EAAOC,IACvC,IAAMS,EAAU,YAAOC,IAAP,YAAqBR,IACrCO,EAAWE,mBAAmBC,0BAA0B,IACxD,IAAMC,EAAa,IAAIC,IAAWf,EAAOC,GACnCe,EAAa,IAAIC,IAAWhB,EAAQa,EAAWI,aAAaC,QAAS,CACvEC,cAAeC,IAAcC,SAC7BC,QAAS,GACTC,MAAO,EACPC,kBAAmB,EACnBC,gBAAiB,EACjBC,eAAgB,IAChBC,aAAc,IACdC,mBAAoB,GACpBC,OAAQ,GACRC,MAAO,IACPC,KAAM,KAEJC,EAAa,IAAIC,IAAWjC,EAAQS,EAAYM,GAItD,OAHAiB,EAAWE,gBAAiB,EAC5B9B,EAASG,QAAQM,GACjBT,EAASG,QAAQyB,GACV5B,IACR,IAGH,OADA+B,qBAAU,WAAW/B,EAASgC,QAAQnC,EAAKoC,MAAOpC,EAAKqC,UAAS,CAACrC,IAC1DsC,aAAS,SAACC,EAAGC,GAAJ,OAAcrC,EAASsC,OAAOD,KAAQ,GAlC1DhD,IAAgBC,UAAUC,KAAO,SAAU6C,EAAGG,GAC1C,OAAOnD,EAAMoD,KAAKC,KAAXrD,CAAiBmD,I,MCV5B,SAASG,EAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAyB,IAAlBC,YAAkB,MAAX,SAAW,EACtCC,EAAOC,mBACPC,EAAQ/C,mBAAQ,kBAAM,IAAIgD,aAAkB,IAE5CC,EAAYjD,mBAAQ,WAEtB,IADA,IAAMkD,EAAO,GACJC,EAAI,EAAGA,EAAIT,EAAOS,IAAK,CAC5B,IAAMC,EAAoB,IAAhBC,KAAKC,SACTC,EAAS,GAAqB,IAAhBF,KAAKC,SACnBE,EAAQ,IAAOH,KAAKC,SAAW,IAC/BG,EAAgC,GAAhBJ,KAAKC,SAAV,GACXI,EAAgC,GAAhBL,KAAKC,SAAV,GACXK,EAAgC,GAAhBN,KAAKC,SAAV,GACjBJ,EAAKU,KAAK,CAACR,IAAGG,SAAQC,QAAOC,UAASC,UAASC,UAASE,GAAI,EAAGC,GAAI,IAEvE,OAAOZ,IACR,CAACR,IAuBJ,OArBAR,aAAS,SAAC6B,GACNd,EAAUe,SAAQ,SAACC,EAAUd,GAAO,IAC3BC,EAA+Ca,EAA/Cb,EAAGG,EAA4CU,EAA5CV,OAAQC,EAAoCS,EAApCT,MAAOC,EAA6BQ,EAA7BR,QAASC,EAAoBO,EAApBP,QAASC,EAAWM,EAAXN,QACzCP,EAAIa,EAASb,GAAKI,EAAQ,EAC1B,IAAMU,EAAIb,KAAKc,IAAIf,GAAKC,KAAKe,IAAQ,EAAJhB,GAAS,GACpCiB,EAAIhB,KAAKe,IAAIhB,GAAKC,KAAKc,IAAQ,EAAJf,GAAS,GACpCkB,EAAIjB,KAAKkB,IAAI,IAAmB,EAAdlB,KAAKc,IAAIf,IACjCa,EAASJ,IAAyC,KAAlClB,EAAM6B,QAAQ,GAAKP,EAASJ,IAC5CI,EAASH,IAA0C,MAAlCnB,EAAM6B,QAAQ,GAAKP,EAASH,IAC7Cf,EAAM0B,SAASnC,IACV2B,EAASJ,GAAK,GAAMK,EAAIT,EAAUJ,KAAKc,IAAKf,EAAI,GAAMG,GAAWF,KAAKe,IAAQ,EAAJhB,GAASG,EAAU,GAC7FU,EAASH,GAAK,GAAMO,EAAIX,EAAUL,KAAKe,IAAKhB,EAAI,GAAMG,GAAWF,KAAKc,IAAQ,EAAJf,GAASG,EAAU,GAC7FU,EAASH,GAAK,GAAMO,EAAIV,EAAUN,KAAKc,IAAKf,EAAI,GAAMG,GAAWF,KAAKe,IAAQ,EAAJhB,GAASG,EAAU,IAElGR,EAAMtB,MAAMa,IAAIgC,EAAGA,EAAGA,GACtBvB,EAAM2B,eACN7B,EAAK2B,QAAQG,YAAYxB,EAAGJ,EAAM6B,WAEtC/B,EAAK2B,QAAQK,eAAeC,aAAc,KAI1C,oCACI,mCAAeC,IAAKlC,EAAMmC,KAAM,CAAC,KAAM,KAAMtC,IAE5B,WAATE,EACI,0CAAsBqC,OAAO,WAAWD,KAAM,CAAC,EAAG,GAAI,MACtD,iCAAaC,OAAO,WAAWD,KAAM,CAAC,EAAG,EAAG,KAEpD,uCAAmBC,OAAO,WAAWC,MAAM,QAAQC,eAAgB,MAkCpEC,MA5Bf,WACI,IAAMC,EAAcvC,iBAAO,CAAC,IAAK,MAC3BwC,EAAWxC,iBAAO,CAAC,IAAK,MAE9B,OACI,yBAAK/D,UAAU,iBACX,kBAAC,IAAD,CACIA,UAAU,SACVU,GAAI,CAAC8F,OAAO,EAAOC,WAAW,EAAOC,wBAAwB,GAC7D9F,OAAQ,CAAC+F,IAAK,GAAIjB,SAAU,CAAC,EAAG,GAAI,KACpCkB,UAAW,YAAW,IAATlG,EAAQ,EAARA,GACTA,EAAGmG,cAAc,WACjBnG,EAAGoG,YAAc7C,wBACjBvD,EAAGqG,eAAiB9C,iBAExB,kCAAc+C,UAAW,IACzB,gCAAYtB,SAAU,CAAC,IAAK,IAAK,KAAMsB,UAAW,MAClD,gCAAYtB,SAAU,EAAE,KAAM,KAAM,KAAMsB,UAAW,GAAIb,MAAM,QAC/D,kBAACzC,EAAD,CAAOE,MAAO0C,EAAa3C,MAAO,GAAIE,KAAM,WAC5C,kBAACH,EAAD,CAAOE,MAAO2C,EAAU5C,MAAO,GAAIE,KAAM,QACzC,kBAAC,WAAD,CAAUoD,SAAU,MAChB,kBAAC,EAAD,UClELC,MATf,WACI,OACI,yBAAKlH,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGQmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlE,OACL,kBAAC,IAAMmE,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0959c86a.chunk.js","sourcesContent":["import React from 'react';\nimport './Info.css';\n\nfunction Info() {\n    return (\n        <div className=\"Info\">\n            <h1>Hello,</h1>\n            <h3>I am Rahul Chavda</h3>\n            <p>\n                I am a full-stack developer living in Ahmedabad, India.<br/>\n                I spend my day working with backend programming (PHP/Laravel, Node.js/Express), frontend\n                frameworks (Angular, React), and mobile platforms (Ionic, React Native).\n            </p>\n            <p>\n                I always enjoy programming and solving problems, and I always try to make myself better with every\n                project I work on.<br/>\n                Besides programming, I love spending time with friends and family and can often be found together going\n                out.\n            </p>\n            <p>\n                <a href=\"https://www.linkedin.com/in/rahul-chavda/\" target=\"_blank\"\n                   rel=\"noopener noreferrer\">LinkedIn</a>&nbsp;&bull;&nbsp;\n                <a href=\"https://github.com/rahul-chavda\" target=\"_blank\"\n                   rel=\"noopener noreferrer\">Github</a>&nbsp;&bull;&nbsp;\n                <a href=\"https://gitlab.com/rahul-chavda\" target=\"_blank\"\n                   rel=\"noopener noreferrer\">Gitlab</a>\n                <br/>\n                <a href=\"mailto:rchavda88@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">rchavda88@gmail.com</a>\n            </p>\n        </div>\n    );\n}\n\nexport default Info;","import {useMemo, useEffect} from 'react'\nimport {useLoader, useThree, useFrame} from 'react-three-fiber'\nimport {\n    SMAAImageLoader,\n    BlendFunction,\n    EffectComposer,\n    EffectPass,\n    RenderPass,\n    SMAAEffect,\n    SSAOEffect,\n    NormalPass\n} from 'postprocessing'\n\n// Fix smaa loader signature\nconst _load = SMAAImageLoader.prototype.load\nSMAAImageLoader.prototype.load = function (_, set) {\n    return _load.bind(this)(set)\n}\n\nexport default function Post() {\n    const {gl, scene, camera, size} = useThree()\n    const smaa = useLoader(SMAAImageLoader)\n    const composer = useMemo(() => {\n        const composer = new EffectComposer(gl)\n        composer.addPass(new RenderPass(scene, camera))\n        const smaaEffect = new SMAAEffect(...smaa)\n        smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n        const normalPass = new NormalPass(scene, camera)\n        const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n            blendFunction: BlendFunction.MULTIPLY,\n            samples: 30,\n            rings: 4,\n            distanceThreshold: 1, // Render distance depends on camera near&far.\n            distanceFalloff: 0.0, // No need for falloff.\n            rangeThreshold: 0.05, // Larger value works better for this camera frustum.\n            rangeFalloff: 0.01,\n            luminanceInfluence: 0.6,\n            radius: 30,\n            scale: 0.85,\n            bias: 0.5\n        })\n        const effectPass = new EffectPass(camera, smaaEffect, ssaoEffect)\n        effectPass.renderToScreen = true\n        composer.addPass(normalPass)\n        composer.addPass(effectPass)\n        return composer\n    }, [])\n\n    useEffect(() => void composer.setSize(size.width, size.height), [size])\n    return useFrame((_, delta) => composer.render(delta), 1)\n}\n","import * as THREE from 'three';\nimport React, {Suspense, useMemo, useRef} from 'react';\nimport {Canvas, useFrame} from 'react-three-fiber';\nimport Effects from './Effects';\nimport './Bubbles.css';\n\nfunction Swarm({count, mouse, type = 'sphere'}) {\n    const mesh = useRef()\n    const dummy = useMemo(() => new THREE.Object3D(), [])\n\n    const particles = useMemo(() => {\n        const temp = []\n        for (let i = 0; i < count; i++) {\n            const t = Math.random() * 100\n            const factor = 20 + Math.random() * 100\n            const speed = 0.01 + Math.random() / 200\n            const xFactor = -20 + Math.random() * 40\n            const yFactor = -20 + Math.random() * 40\n            const zFactor = -20 + Math.random() * 40\n            temp.push({t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0})\n        }\n        return temp\n    }, [count])\n\n    useFrame((state) => {\n        particles.forEach((particle, i) => {\n            let {t, factor, speed, xFactor, yFactor, zFactor} = particle\n            t = particle.t += speed / 2\n            const a = Math.cos(t) + Math.sin(t * 1) / 10\n            const b = Math.sin(t) + Math.cos(t * 2) / 10\n            const s = Math.max(1.5, Math.cos(t) * 5)\n            particle.mx += (mouse.current[0] - particle.mx) * 0.02\n            particle.my += (-mouse.current[1] - particle.my) * 0.02\n            dummy.position.set(\n                (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n                (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n                (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n            )\n            dummy.scale.set(s, s, s)\n            dummy.updateMatrix()\n            mesh.current.setMatrixAt(i, dummy.matrix)\n        })\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n\n    return (\n        <>\n            <instancedMesh ref={mesh} args={[null, null, count]}>\n                {\n                    type === 'sphere' ?\n                        <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]}/> :\n                        <boxGeometry attach=\"geometry\" args={[2, 2, 2]}/>\n                }\n                <meshPhongMaterial attach=\"material\" color=\"white\" aoMapIntensity={5}/>\n            </instancedMesh>\n        </>\n    )\n}\n\nfunction Bubbles() {\n    const sphereMouse = useRef([500, 300])\n    const boxMouse = useRef([550, 350])\n\n    return (\n        <div className=\"BubbleWrapper\">\n            <Canvas\n                className=\"Canvas\"\n                gl={{alpha: false, antialias: false, logarithmicDepthBuffer: true}}\n                camera={{fov: 75, position: [0, 20, 70]}}\n                onCreated={({gl}) => {\n                    gl.setClearColor('#e0feff')\n                    gl.toneMapping = THREE.ACESFilmicToneMapping\n                    gl.outputEncoding = THREE.sRGBEncoding\n                }}>\n                <ambientLight intensity={1}/>\n                <pointLight position={[100, 100, 100]} intensity={2.2}/>\n                <pointLight position={[-100, -100, -100]} intensity={10} color=\"red\"/>\n                <Swarm mouse={sphereMouse} count={30} type={'sphere'}/>\n                <Swarm mouse={boxMouse} count={30} type={'box'}/>\n                <Suspense fallback={null}>\n                    <Effects/>\n                </Suspense>\n            </Canvas>\n        </div>\n    )\n}\n\nexport default Bubbles;","import React from 'react';\nimport './Home.css';\nimport Info from \"../Info/Info\";\nimport Bubbles from \"../Bubbles/Bubbles\";\n\nfunction Home() {\n    return (\n        <div className=\"Home\">\n            <Bubbles/>\n            <Info/>\n        </div>\n    );\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Home/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}